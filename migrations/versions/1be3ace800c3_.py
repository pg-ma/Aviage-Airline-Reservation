"""empty message

Revision ID: 1be3ace800c3
Revises: 
Create Date: 2024-05-10 06:03:43.459341

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1be3ace800c3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ClassType',
    sa.Column('ClassId', sa.Integer(), nullable=False),
    sa.Column('ClassTypeName', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('ClassId')
    )
    op.create_table('Country',
    sa.Column('CountryId', sa.Integer(), nullable=False),
    sa.Column('CountryName', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('CountryId')
    )
    op.create_table('Currency',
    sa.Column('ForeignCurrency', sa.String(length=3), nullable=False),
    sa.Column('LocalCurrency', sa.String(length=3), nullable=False),
    sa.Column('ExchangeRate', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('ForeignCurrency', 'LocalCurrency')
    )
    op.create_table('Status',
    sa.Column('StatusId', sa.Integer(), nullable=False),
    sa.Column('Status', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('StatusId')
    )
    op.create_table('User',
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('FirstName', sa.String(length=50), nullable=False),
    sa.Column('LastName', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('UserId'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Airline',
    sa.Column('AirlineId', sa.Integer(), nullable=False),
    sa.Column('AirlineName', sa.String(length=50), nullable=False),
    sa.Column('CountryId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['CountryId'], ['Country.CountryId'], ),
    sa.PrimaryKeyConstraint('AirlineId')
    )
    op.create_table('City',
    sa.Column('CityId', sa.Integer(), nullable=False),
    sa.Column('CityName', sa.String(length=50), nullable=False),
    sa.Column('CountryId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['CountryId'], ['Country.CountryId'], ),
    sa.PrimaryKeyConstraint('CityId')
    )
    op.create_table('FaxNumber',
    sa.Column('FaxNo', sa.String(length=100), nullable=False),
    sa.Column('FCountryCode', sa.String(length=50), nullable=False),
    sa.Column('FAreaCode', sa.String(length=50), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['User.UserId'], ),
    sa.PrimaryKeyConstraint('FaxNo', 'FCountryCode', 'FAreaCode')
    )
    op.create_table('Mail',
    sa.Column('MailId', sa.Integer(), nullable=False),
    sa.Column('Street', sa.String(length=100), nullable=True),
    sa.Column('City', sa.String(length=100), nullable=True),
    sa.Column('Province', sa.String(length=100), nullable=True),
    sa.Column('PostalCode', sa.String(length=100), nullable=True),
    sa.Column('Country', sa.String(length=100), nullable=True),
    sa.Column('UserId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['User.UserId'], ),
    sa.PrimaryKeyConstraint('MailId')
    )
    op.create_table('PhoneNumber',
    sa.Column('PhoneNo', sa.String(length=50), nullable=False),
    sa.Column('PCountryCode', sa.String(length=50), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['User.UserId'], ),
    sa.PrimaryKeyConstraint('PhoneNo', 'PCountryCode')
    )
    op.create_table('Airport',
    sa.Column('AirportId', sa.Integer(), nullable=False),
    sa.Column('AirportName', sa.String(length=50), nullable=False),
    sa.Column('AirportTax', sa.Float(), nullable=False),
    sa.Column('CityId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CityId'], ['City.CityId'], ),
    sa.PrimaryKeyConstraint('AirportId')
    )
    op.create_table('Flight',
    sa.Column('FlightId', sa.Integer(), nullable=False),
    sa.Column('AirlineId', sa.Integer(), nullable=True),
    sa.Column('IsBusinessClassAvail', sa.Boolean(), nullable=False),
    sa.Column('IsSmokingAllowed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['AirlineId'], ['Airline.AirlineId'], ),
    sa.PrimaryKeyConstraint('FlightId')
    )
    op.create_table('city_currency',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('foreign_currency', sa.String(length=3), nullable=True),
    sa.Column('local_currency', sa.String(length=3), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['City.CityId'], ),
    sa.ForeignKeyConstraint(['foreign_currency'], ['Currency.ForeignCurrency'], ),
    sa.ForeignKeyConstraint(['local_currency'], ['Currency.LocalCurrency'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('FlightAvailability',
    sa.Column('FlightId', sa.Integer(), nullable=False),
    sa.Column('Arrival', sa.DateTime(), nullable=False),
    sa.Column('Departure', sa.DateTime(), nullable=False),
    sa.Column('Origin', sa.Integer(), nullable=False),
    sa.Column('Destination', sa.Integer(), nullable=False),
    sa.Column('FlightPrice', sa.Float(), nullable=False),
    sa.Column('AvailSeatsBC', sa.Integer(), nullable=True),
    sa.Column('BookedSeatsBC', sa.Integer(), nullable=True),
    sa.Column('AvailSeatsEC', sa.Integer(), nullable=True),
    sa.Column('BookedSeatsEC', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Destination'], ['Airport.AirportId'], ),
    sa.ForeignKeyConstraint(['FlightId'], ['Flight.FlightId'], ),
    sa.ForeignKeyConstraint(['Origin'], ['Airport.AirportId'], ),
    sa.PrimaryKeyConstraint('FlightId', 'Arrival', 'Departure', 'Origin', 'Destination')
    )
    op.create_table('Booking',
    sa.Column('BookingId', sa.Integer(), nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=True),
    sa.Column('FlightId', sa.Integer(), nullable=True),
    sa.Column('ClassId', sa.Integer(), nullable=True),
    sa.Column('StatusId', sa.Integer(), nullable=True),
    sa.Column('Origin', sa.Integer(), nullable=True),
    sa.Column('Destination', sa.Integer(), nullable=True),
    sa.Column('Arrival', sa.DateTime(), nullable=True),
    sa.Column('Departure', sa.DateTime(), nullable=True),
    sa.Column('BookingCity', sa.Integer(), nullable=True),
    sa.Column('passengerName', sa.String(length=50), nullable=False),
    sa.Column('FlightPrice', sa.Float(), nullable=True),
    sa.Column('TotalPrice', sa.Float(), nullable=True),
    sa.Column('PaidAmount', sa.Float(), nullable=True),
    sa.Column('Balance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['Arrival'], ['FlightAvailability.Arrival'], ),
    sa.ForeignKeyConstraint(['BookingCity'], ['City.CityId'], ),
    sa.ForeignKeyConstraint(['ClassId'], ['ClassType.ClassId'], ),
    sa.ForeignKeyConstraint(['Departure'], ['FlightAvailability.Departure'], ),
    sa.ForeignKeyConstraint(['Destination'], ['FlightAvailability.Destination'], ),
    sa.ForeignKeyConstraint(['FlightId'], ['FlightAvailability.FlightId'], ),
    sa.ForeignKeyConstraint(['Origin'], ['FlightAvailability.Origin'], ),
    sa.ForeignKeyConstraint(['StatusId'], ['Status.StatusId'], ),
    sa.ForeignKeyConstraint(['UserId'], ['User.UserId'], ),
    sa.PrimaryKeyConstraint('BookingId')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Booking')
    op.drop_table('FlightAvailability')
    op.drop_table('city_currency')
    op.drop_table('Flight')
    op.drop_table('Airport')
    op.drop_table('PhoneNumber')
    op.drop_table('Mail')
    op.drop_table('FaxNumber')
    op.drop_table('City')
    op.drop_table('Airline')
    op.drop_table('User')
    op.drop_table('Status')
    op.drop_table('Currency')
    op.drop_table('Country')
    op.drop_table('ClassType')
    # ### end Alembic commands ###
